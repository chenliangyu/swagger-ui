openapi: 3.0.0
info:
  description: "This is a sample server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters."
  version: "1.0.0"
  title: "Swagger Petstore"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
servers: 
  - url: "https://petstore.swagger.io/v2"
paths:
  /pet:
    post:
      summary: "Add a new pet to the store"
      description: ""
      operationId: "addPet"
      requestBody:
        description: "Pet object that needs to be added to the store"
        required: true
        content:
          application-json:
            schema:
              oneOf:
              - $ref: "#/components/schemas/Pet1"
              - $ref: "#/components/schemas/Pet2"
      responses:
        200:
          content:
            application-json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/Pet1"
                - $ref: "#/components/schemas/Pet2"
        405:
          description: "Invalid input"
        600:
          description: "test"
components:
  schemas:
    Pet1:
      type: "object"
      required:
      - "name"
      - "photoUrls"
      properties:
        id:
          type: "integer"
          format: "int64"
          enum:
            - 1
        name:
          type: "string"
          enum: 
          - "doggie"
        photoUrls:
          type: "array"
          items:
            type: "string"
        status:
          type: "string"
          description: "pet status in the store"
          enum:
          - "available"
          - "pending"
          - "sold"
    Pet2:
      type: "object"
      required:
      - "name"
      - "photoUrls"
      properties:
        id:
          type: "integer"
          format: "int64"
          enum:
            - 2
        name:
          type: "string"
          enum: 
          - "doggie"
        photoUrls:
          type: "array"
          items:
            type: "string"
        status:
          type: "string"
          description: "pet status in the store"
          enum:
          - "available"
          - "pending"
          - "sold"